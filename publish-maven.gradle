apply plugin: 'com.vanniktech.maven.publish'
/*// 生成文档注释
tasks.register('androidJavadocs', Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.srcDirs
}
// 将文档打包成jar,生成javadoc.jar
tasks.register('androidJavadocsJar', Jar) {
    // 指定文档名称
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}*/
// 将源码打包 ，生成sources.jar
tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs

    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}
//配置需要上传到maven仓库的文件
artifacts {
    archives androidSourcesJar //将源码打包进aar,这样使用方可以看到方法注释.
    //archives androidJavadocsJar //将注释打包进aar
}

mavenPublishing {
    coordinates(PUBLISH_GROUP_ID, PUBLISH_ARTIFACT_ID, PUBLISH_VERSION)
    pom {
        name = PUBLISH_ARTIFACT_ID
        description = "Kotlin MVVM Frame"
        inceptionYear = "2022"
        url = "https://gitee.com/ezhuwx/QzKtFrame"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = 'ezhuwx'
                name = 'ezhuhwx'
                email = 'ezhuwx@163.com'
            }
        }
        scm {
            url = 'https://gitee.com/ezhuwx/QzKtFrame'
            connection = 'https://gitee.com/ezhuwx/QzKtFrame.git'
            developerConnection = 'https://gitee.com/ezhuwx/QzKtFrame.git'
        }
        //发布到Maven中央仓库
        publishToMavenCentral(SonatypeHostMavenCentral,true)
        //发布到本地
        publishToMavenLocal
        //签名
        signAllPublications()
    }
}
